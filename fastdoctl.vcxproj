<?xml version="1.0" encoding="utf-8"?>
<Project DefaultTargets="Build" ToolsVersion="15.0" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
  <ItemGroup Label="ProjectConfigurations">
    <ProjectConfiguration Include="Debug|Win32">
      <Configuration>Debug</Configuration>
      <Platform>Win32</Platform>
    </ProjectConfiguration>
    <ProjectConfiguration Include="Release|Win32">
      <Configuration>Release</Configuration>
      <Platform>Win32</Platform>
    </ProjectConfiguration>
    <ProjectConfiguration Include="Debug|x64">
      <Configuration>Debug</Configuration>
      <Platform>x64</Platform>
    </ProjectConfiguration>
    <ProjectConfiguration Include="Release|x64">
      <Configuration>Release</Configuration>
      <Platform>x64</Platform>
    </ProjectConfiguration>
  </ItemGroup>
  <ItemGroup>
    <ClCompile Include="src\ctl_api_handlers.cpp" />
    <ClCompile Include="src\ctl_ControlCenterApp.cpp" />
    <ClCompile Include="src\main.cpp" />
    <ClCompile Include="src\ctl_common_win.cpp" />
    <ClCompile Include="src\ctl_web_handlers.cpp" />
  </ItemGroup>
  <ItemGroup>
    <None Include="fastdoctl.settings" />
  </ItemGroup>
  <ItemGroup>
    <ClInclude Include="src\ctl_api_handlers.hpp" />
    <ClInclude Include="src\ctl_common.hpp" />
    <ClInclude Include="src\ctl_ControlCenterApp.hpp" />
    <ClInclude Include="src\ctl_web_handlers.hpp" />
  </ItemGroup>
  <PropertyGroup Label="Globals">
    <VCProjectVersion>15.0</VCProjectVersion>
    <ProjectGuid>{242878B3-118E-45C7-8758-731C761B9339}</ProjectGuid>
    <Keyword>Win32Proj</Keyword>
    <RootNamespace>fastdoctl</RootNamespace>
    <WindowsTargetPlatformVersion>10.0.17763.0</WindowsTargetPlatformVersion>
  </PropertyGroup>
  <Import Project="$(VCTargetsPath)\Microsoft.Cpp.Default.props" />
  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Debug|Win32'" Label="Configuration">
    <ConfigurationType>Application</ConfigurationType>
    <UseDebugLibraries>true</UseDebugLibraries>
    <PlatformToolset>v141</PlatformToolset>
    <CharacterSet>MultiByte</CharacterSet>
  </PropertyGroup>
  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Release|Win32'" Label="Configuration">
    <ConfigurationType>Application</ConfigurationType>
    <UseDebugLibraries>false</UseDebugLibraries>
    <PlatformToolset>v141</PlatformToolset>
    <WholeProgramOptimization>true</WholeProgramOptimization>
    <CharacterSet>MultiByte</CharacterSet>
  </PropertyGroup>
  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Debug|x64'" Label="Configuration">
    <ConfigurationType>Application</ConfigurationType>
    <UseDebugLibraries>true</UseDebugLibraries>
    <PlatformToolset>v141</PlatformToolset>
    <CharacterSet>MultiByte</CharacterSet>
  </PropertyGroup>
  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Release|x64'" Label="Configuration">
    <ConfigurationType>Application</ConfigurationType>
    <UseDebugLibraries>false</UseDebugLibraries>
    <PlatformToolset>v141</PlatformToolset>
    <WholeProgramOptimization>true</WholeProgramOptimization>
    <CharacterSet>MultiByte</CharacterSet>
  </PropertyGroup>
  <Import Project="$(VCTargetsPath)\Microsoft.Cpp.props" />
  <ImportGroup Label="ExtensionSettings">
  </ImportGroup>
  <ImportGroup Label="Shared">
  </ImportGroup>
  <ImportGroup Label="PropertySheets" Condition="'$(Configuration)|$(Platform)'=='Debug|Win32'">
    <Import Project="$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props" Condition="exists('$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props')" Label="LocalAppDataPlatform" />
  </ImportGroup>
  <ImportGroup Label="PropertySheets" Condition="'$(Configuration)|$(Platform)'=='Release|Win32'">
    <Import Project="$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props" Condition="exists('$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props')" Label="LocalAppDataPlatform" />
  </ImportGroup>
  <ImportGroup Label="PropertySheets" Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">
    <Import Project="$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props" Condition="exists('$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props')" Label="LocalAppDataPlatform" />
  </ImportGroup>
  <ImportGroup Label="PropertySheets" Condition="'$(Configuration)|$(Platform)'=='Release|x64'">
    <Import Project="$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props" Condition="exists('$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props')" Label="LocalAppDataPlatform" />
  </ImportGroup>
  <PropertyGroup Label="UserMacros" />
  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">
    <LinkIncremental>true</LinkIncremental>
    <OutDir>$(SolutionDir)build\windows\$(PlatformShortName)-$(Configuration)\bin\</OutDir>
    <IntDir>$(ProjectDir)objs\$(PlatformShortName)-$(Configuration)\</IntDir>
  </PropertyGroup>
  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Debug|Win32'">
    <LinkIncremental>true</LinkIncremental>
    <OutDir>$(SolutionDir)build\windows\$(PlatformShortName)-$(Configuration)\bin\</OutDir>
    <IntDir>$(ProjectDir)objs\$(PlatformShortName)-$(Configuration)\</IntDir>
  </PropertyGroup>
  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Release|Win32'">
    <LinkIncremental>false</LinkIncremental>
    <OutDir>$(SolutionDir)build\windows\$(PlatformShortName)-$(Configuration)\bin\</OutDir>
    <IntDir>$(ProjectDir)objs\$(PlatformShortName)-$(Configuration)\</IntDir>
  </PropertyGroup>
  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Release|x64'">
    <LinkIncremental>false</LinkIncremental>
    <OutDir>$(SolutionDir)build\windows\$(PlatformShortName)-$(Configuration)\bin\</OutDir>
    <IntDir>$(ProjectDir)objs\$(PlatformShortName)-$(Configuration)\</IntDir>
  </PropertyGroup>
  <ItemDefinitionGroup Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">
    <ClCompile>
      <WarningLevel>Level3</WarningLevel>
      <Optimization>Disabled</Optimization>
      <SDLCheck>true</SDLCheck>
      <PreprocessorDefinitions>WINUX_DLL_USE;EIENML_DLL_USE;EIENEXPR_DLL_USE;EIENTPL_DLL_USE;EIENNET_DLL_USE;EIENWEBX_DLL_USE;EIENGD_DLL_USE;_CONSOLE;_DEBUG;%(PreprocessorDefinitions)</PreprocessorDefinitions>
      <ConformanceMode>true</ConformanceMode>
      <AdditionalIncludeDirectories>..\..\components\winux\include;..\..\components\eienml\include;..\..\components\eienexpr\include;..\..\components\eientpl\include;..\..\components\httpwrapper\include;..\..\components\eiennet\include;..\..\components\eienwebx\include;..\..\components\eiengd\include;..\..\components\appserv;%(AdditionalIncludeDirectories)</AdditionalIncludeDirectories>
    </ClCompile>
    <Link>
      <SubSystem>Console</SubSystem>
      <GenerateDebugInformation>true</GenerateDebugInformation>
      <AdditionalLibraryDirectories>$(SolutionDir)build\windows\$(PlatformShortName)-$(Configuration)\lib;%(AdditionalLibraryDirectories)</AdditionalLibraryDirectories>
      <AdditionalDependencies>winux.lib;eienml.lib;eienexpr.lib;eientpl.lib;eiennet.lib;httpwrapper.lib;eienwebx.lib;eiengd.lib;%(AdditionalDependencies)</AdditionalDependencies>
    </Link>
    <PostBuildEvent>
      <Command>if not exist $(SolutionDir)build\nul mkdir $(SolutionDir)build
if not exist $(SolutionDir)build\windows\nul mkdir $(SolutionDir)build\windows
if not exist $(SolutionDir)build\windows\include\nul mkdir $(SolutionDir)build\windows\include
if not exist $(SolutionDir)build\windows\$(PlatformShortName)-$(Configuration)\nul mkdir $(SolutionDir)build\windows\$(PlatformShortName)-$(Configuration)
if not exist $(SolutionDir)build\windows\$(PlatformShortName)-$(Configuration)\bin\nul mkdir $(SolutionDir)build\windows\$(PlatformShortName)-$(Configuration)\bin
if not exist $(SolutionDir)build\windows\$(PlatformShortName)-$(Configuration)\bin\fastdoctl_mods\nul mkdir $(SolutionDir)build\windows\$(PlatformShortName)-$(Configuration)\bin\fastdoctl_mods
xcopy /D /Y fastdoctl_mods\*.do $(SolutionDir)build\windows\$(PlatformShortName)-$(Configuration)\bin\fastdoctl_mods\
if not exist $(SolutionDir)build\windows\$(PlatformShortName)-$(Configuration)\bin\fastdoctl_mods\api\nul mkdir $(SolutionDir)build\windows\$(PlatformShortName)-$(Configuration)\bin\fastdoctl_mods\api
xcopy /D /Y fastdoctl_mods\api\*.do $(SolutionDir)build\windows\$(PlatformShortName)-$(Configuration)\bin\fastdoctl_mods\api\
if exist *.settings xcopy /D /Y *.settings $(SolutionDir)build\windows\$(PlatformShortName)-$(Configuration)\bin\
xcopy /D /Y README.md $(SolutionDir)build\windows\$(PlatformShortName)-$(Configuration)\bin\
</Command>
    </PostBuildEvent>
  </ItemDefinitionGroup>
  <ItemDefinitionGroup Condition="'$(Configuration)|$(Platform)'=='Debug|Win32'">
    <ClCompile>
      <WarningLevel>Level3</WarningLevel>
      <Optimization>Disabled</Optimization>
      <SDLCheck>true</SDLCheck>
      <PreprocessorDefinitions>WINUX_DLL_USE;EIENML_DLL_USE;EIENEXPR_DLL_USE;EIENTPL_DLL_USE;EIENNET_DLL_USE;EIENWEBX_DLL_USE;EIENGD_DLL_USE;_CONSOLE;WIN32;_DEBUG;%(PreprocessorDefinitions)</PreprocessorDefinitions>
      <ConformanceMode>true</ConformanceMode>
      <AdditionalIncludeDirectories>..\..\components\winux\include;..\..\components\eienml\include;..\..\components\eienexpr\include;..\..\components\eientpl\include;..\..\components\httpwrapper\include;..\..\components\eiennet\include;..\..\components\eienwebx\include;..\..\components\eiengd\include;..\..\components\appserv;%(AdditionalIncludeDirectories)</AdditionalIncludeDirectories>
    </ClCompile>
    <Link>
      <SubSystem>Console</SubSystem>
      <GenerateDebugInformation>true</GenerateDebugInformation>
      <AdditionalLibraryDirectories>$(SolutionDir)build\windows\$(PlatformShortName)-$(Configuration)\lib;%(AdditionalLibraryDirectories)</AdditionalLibraryDirectories>
      <AdditionalDependencies>winux.lib;eienml.lib;eienexpr.lib;eientpl.lib;eiennet.lib;httpwrapper.lib;eienwebx.lib;eiengd.lib;%(AdditionalDependencies)</AdditionalDependencies>
    </Link>
    <PostBuildEvent>
      <Command>if not exist $(SolutionDir)build\nul mkdir $(SolutionDir)build
if not exist $(SolutionDir)build\windows\nul mkdir $(SolutionDir)build\windows
if not exist $(SolutionDir)build\windows\include\nul mkdir $(SolutionDir)build\windows\include
if not exist $(SolutionDir)build\windows\$(PlatformShortName)-$(Configuration)\nul mkdir $(SolutionDir)build\windows\$(PlatformShortName)-$(Configuration)
if not exist $(SolutionDir)build\windows\$(PlatformShortName)-$(Configuration)\bin\nul mkdir $(SolutionDir)build\windows\$(PlatformShortName)-$(Configuration)\bin
if not exist $(SolutionDir)build\windows\$(PlatformShortName)-$(Configuration)\bin\fastdoctl_mods\nul mkdir $(SolutionDir)build\windows\$(PlatformShortName)-$(Configuration)\bin\fastdoctl_mods
xcopy /D /Y fastdoctl_mods\*.do $(SolutionDir)build\windows\$(PlatformShortName)-$(Configuration)\bin\fastdoctl_mods\
if not exist $(SolutionDir)build\windows\$(PlatformShortName)-$(Configuration)\bin\fastdoctl_mods\api\nul mkdir $(SolutionDir)build\windows\$(PlatformShortName)-$(Configuration)\bin\fastdoctl_mods\api
xcopy /D /Y fastdoctl_mods\api\*.do $(SolutionDir)build\windows\$(PlatformShortName)-$(Configuration)\bin\fastdoctl_mods\api\
if exist *.settings xcopy /D /Y *.settings $(SolutionDir)build\windows\$(PlatformShortName)-$(Configuration)\bin\
xcopy /D /Y README.md $(SolutionDir)build\windows\$(PlatformShortName)-$(Configuration)\bin\
</Command>
    </PostBuildEvent>
  </ItemDefinitionGroup>
  <ItemDefinitionGroup Condition="'$(Configuration)|$(Platform)'=='Release|Win32'">
    <ClCompile>
      <WarningLevel>Level3</WarningLevel>
      <Optimization>MaxSpeed</Optimization>
      <FunctionLevelLinking>true</FunctionLevelLinking>
      <IntrinsicFunctions>true</IntrinsicFunctions>
      <SDLCheck>true</SDLCheck>
      <PreprocessorDefinitions>WINUX_DLL_USE;EIENML_DLL_USE;EIENEXPR_DLL_USE;EIENTPL_DLL_USE;EIENNET_DLL_USE;EIENWEBX_DLL_USE;EIENGD_DLL_USE;_CONSOLE;WIN32;NDEBUG;%(PreprocessorDefinitions)</PreprocessorDefinitions>
      <ConformanceMode>true</ConformanceMode>
      <AdditionalIncludeDirectories>..\..\components\winux\include;..\..\components\eienml\include;..\..\components\eienexpr\include;..\..\components\eientpl\include;..\..\components\httpwrapper\include;..\..\components\eiennet\include;..\..\components\eienwebx\include;..\..\components\eiengd\include;..\..\components\appserv;%(AdditionalIncludeDirectories)</AdditionalIncludeDirectories>
    </ClCompile>
    <Link>
      <SubSystem>Console</SubSystem>
      <EnableCOMDATFolding>true</EnableCOMDATFolding>
      <OptimizeReferences>true</OptimizeReferences>
      <GenerateDebugInformation>true</GenerateDebugInformation>
      <AdditionalLibraryDirectories>$(SolutionDir)build\windows\$(PlatformShortName)-$(Configuration)\lib;%(AdditionalLibraryDirectories)</AdditionalLibraryDirectories>
      <AdditionalDependencies>winux.lib;eienml.lib;eienexpr.lib;eientpl.lib;eiennet.lib;httpwrapper.lib;eienwebx.lib;eiengd.lib;%(AdditionalDependencies)</AdditionalDependencies>
    </Link>
    <PostBuildEvent>
      <Command>if not exist $(SolutionDir)build\nul mkdir $(SolutionDir)build
if not exist $(SolutionDir)build\windows\nul mkdir $(SolutionDir)build\windows
if not exist $(SolutionDir)build\windows\include\nul mkdir $(SolutionDir)build\windows\include
if not exist $(SolutionDir)build\windows\$(PlatformShortName)-$(Configuration)\nul mkdir $(SolutionDir)build\windows\$(PlatformShortName)-$(Configuration)
if not exist $(SolutionDir)build\windows\$(PlatformShortName)-$(Configuration)\bin\nul mkdir $(SolutionDir)build\windows\$(PlatformShortName)-$(Configuration)\bin
if not exist $(SolutionDir)build\windows\$(PlatformShortName)-$(Configuration)\bin\fastdoctl_mods\nul mkdir $(SolutionDir)build\windows\$(PlatformShortName)-$(Configuration)\bin\fastdoctl_mods
xcopy /D /Y fastdoctl_mods\*.do $(SolutionDir)build\windows\$(PlatformShortName)-$(Configuration)\bin\fastdoctl_mods\
if not exist $(SolutionDir)build\windows\$(PlatformShortName)-$(Configuration)\bin\fastdoctl_mods\api\nul mkdir $(SolutionDir)build\windows\$(PlatformShortName)-$(Configuration)\bin\fastdoctl_mods\api
xcopy /D /Y fastdoctl_mods\api\*.do $(SolutionDir)build\windows\$(PlatformShortName)-$(Configuration)\bin\fastdoctl_mods\api\
if exist *.settings xcopy /D /Y *.settings $(SolutionDir)build\windows\$(PlatformShortName)-$(Configuration)\bin\
xcopy /D /Y README.md $(SolutionDir)build\windows\$(PlatformShortName)-$(Configuration)\bin\
</Command>
    </PostBuildEvent>
  </ItemDefinitionGroup>
  <ItemDefinitionGroup Condition="'$(Configuration)|$(Platform)'=='Release|x64'">
    <ClCompile>
      <WarningLevel>Level3</WarningLevel>
      <Optimization>MaxSpeed</Optimization>
      <FunctionLevelLinking>true</FunctionLevelLinking>
      <IntrinsicFunctions>true</IntrinsicFunctions>
      <SDLCheck>true</SDLCheck>
      <PreprocessorDefinitions>WINUX_DLL_USE;EIENML_DLL_USE;EIENEXPR_DLL_USE;EIENTPL_DLL_USE;EIENNET_DLL_USE;EIENWEBX_DLL_USE;EIENGD_DLL_USE;_CONSOLE;NDEBUG;%(PreprocessorDefinitions)</PreprocessorDefinitions>
      <ConformanceMode>true</ConformanceMode>
      <AdditionalIncludeDirectories>..\..\components\winux\include;..\..\components\eienml\include;..\..\components\eienexpr\include;..\..\components\eientpl\include;..\..\components\httpwrapper\include;..\..\components\eiennet\include;..\..\components\eienwebx\include;..\..\components\eiengd\include;..\..\components\appserv;%(AdditionalIncludeDirectories)</AdditionalIncludeDirectories>
    </ClCompile>
    <Link>
      <SubSystem>Console</SubSystem>
      <EnableCOMDATFolding>true</EnableCOMDATFolding>
      <OptimizeReferences>true</OptimizeReferences>
      <GenerateDebugInformation>true</GenerateDebugInformation>
      <AdditionalLibraryDirectories>$(SolutionDir)build\windows\$(PlatformShortName)-$(Configuration)\lib;%(AdditionalLibraryDirectories)</AdditionalLibraryDirectories>
      <AdditionalDependencies>winux.lib;eienml.lib;eienexpr.lib;eientpl.lib;eiennet.lib;httpwrapper.lib;eienwebx.lib;eiengd.lib;%(AdditionalDependencies)</AdditionalDependencies>
    </Link>
    <PostBuildEvent>
      <Command>if not exist $(SolutionDir)build\nul mkdir $(SolutionDir)build
if not exist $(SolutionDir)build\windows\nul mkdir $(SolutionDir)build\windows
if not exist $(SolutionDir)build\windows\include\nul mkdir $(SolutionDir)build\windows\include
if not exist $(SolutionDir)build\windows\$(PlatformShortName)-$(Configuration)\nul mkdir $(SolutionDir)build\windows\$(PlatformShortName)-$(Configuration)
if not exist $(SolutionDir)build\windows\$(PlatformShortName)-$(Configuration)\bin\nul mkdir $(SolutionDir)build\windows\$(PlatformShortName)-$(Configuration)\bin
if not exist $(SolutionDir)build\windows\$(PlatformShortName)-$(Configuration)\bin\fastdoctl_mods\nul mkdir $(SolutionDir)build\windows\$(PlatformShortName)-$(Configuration)\bin\fastdoctl_mods
xcopy /D /Y fastdoctl_mods\*.do $(SolutionDir)build\windows\$(PlatformShortName)-$(Configuration)\bin\fastdoctl_mods\
if not exist $(SolutionDir)build\windows\$(PlatformShortName)-$(Configuration)\bin\fastdoctl_mods\api\nul mkdir $(SolutionDir)build\windows\$(PlatformShortName)-$(Configuration)\bin\fastdoctl_mods\api
xcopy /D /Y fastdoctl_mods\api\*.do $(SolutionDir)build\windows\$(PlatformShortName)-$(Configuration)\bin\fastdoctl_mods\api\
if exist *.settings xcopy /D /Y *.settings $(SolutionDir)build\windows\$(PlatformShortName)-$(Configuration)\bin\
xcopy /D /Y README.md $(SolutionDir)build\windows\$(PlatformShortName)-$(Configuration)\bin\
</Command>
    </PostBuildEvent>
  </ItemDefinitionGroup>
  <Import Project="$(VCTargetsPath)\Microsoft.Cpp.targets" />
  <ImportGroup Label="ExtensionTargets">
  </ImportGroup>
</Project>